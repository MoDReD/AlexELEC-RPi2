diff -Naurp kodi-16.1-rc2-a6d8b94/addons/resource.language.en_gb/resources/strings.po kodi-16.1-rc2-a6d8b94-patch/addons/resource.language.en_gb/resources/strings.po
--- kodi-16.1-rc2-a6d8b94/addons/resource.language.en_gb/resources/strings.po	2016-03-13 17:37:33.000000000 +0200
+++ kodi-16.1-rc2-a6d8b94-patch/addons/resource.language.en_gb/resources/strings.po	2016-03-13 17:35:57.000000000 +0200
@@ -5454,7 +5454,7 @@ msgstr ""
 
 #: system/settings/settings.xml
 msgctxt "#13010"
-msgid "Hibernate"
+msgid "Games"
 msgstr ""
 
 #: system/settings/settings.xml
diff -Naurp kodi-16.1-rc2-a6d8b94/addons/resource.language.ru_ru/resources/strings.po kodi-16.1-rc2-a6d8b94-patch/addons/resource.language.ru_ru/resources/strings.po
--- kodi-16.1-rc2-a6d8b94/addons/resource.language.ru_ru/resources/strings.po	2016-03-13 17:37:33.000000000 +0200
+++ kodi-16.1-rc2-a6d8b94-patch/addons/resource.language.ru_ru/resources/strings.po	2016-03-13 17:35:57.000000000 +0200
@@ -4327,7 +4327,7 @@ msgstr "Общее время работ
 
 msgctxt "#12395"
 msgid "Linux version"
-msgstr "Версия Linux"
+msgstr "Ядро Linux"
 
 msgctxt "#12396"
 msgid "Auto updates: On"
@@ -4386,8 +4386,8 @@ msgid "Quit"
 msgstr "Выход"
 
 msgctxt "#13010"
-msgid "Hibernate"
-msgstr "Спящий режим"
+msgid "Games"
+msgstr "Игры"
 
 msgctxt "#13011"
 msgid "Suspend"
diff -Naurp kodi-16.1-rc2-a6d8b94/xbmc/Application.cpp kodi-16.1-rc2-a6d8b94-patch/xbmc/Application.cpp
--- kodi-16.1-rc2-a6d8b94/xbmc/Application.cpp	2016-03-14 17:09:01.000000000 +0200
+++ kodi-16.1-rc2-a6d8b94-patch/xbmc/Application.cpp	2016-03-14 17:14:28.000000000 +0200
@@ -225,6 +225,8 @@
 #include "pictures/GUIWindowSlideShow.h"
 #include "windows/GUIWindowLoginScreen.h"
 
+#include <fstream>
+
 using namespace ADDON;
 using namespace XFILE;
 #ifdef HAS_DVD_DRIVE
@@ -1083,6 +1085,18 @@ void CApplication::CreateUserDirs()
 
 bool CApplication::Initialize()
 {
+  // start TV backend
+  std::ifstream isRunVDR, isRunTVH;
+  isRunVDR.open("/storage/.cache/services/vdr-backend.conf");
+  isRunTVH.open("/storage/.cache/services/tvheadend.conf");
+
+  if(isRunVDR.good())
+    system("systemctl start vdr-backend.service");
+  if(isRunTVH.good())
+    system("systemctl start tvheadend.service");
+  isRunVDR.close();
+  isRunTVH.close();
+
 #if defined(HAS_DVD_DRIVE) && !defined(TARGET_WINDOWS) // somehow this throws an "unresolved external symbol" on win32
   // turn off cdio logging
   cdio_loglevel_default = CDIO_LOG_ERROR;
@@ -2501,6 +2515,7 @@ void CApplication::OnApplicationMessage(
 
   case TMSG_QUIT:
     SetExitCode(EXITCODE_QUIT);
+    Stop(EXITCODE_QUIT);
     break;
   
   case TMSG_SHUTDOWN:
@@ -2512,7 +2527,8 @@ void CApplication::OnApplicationMessage(
     break;
 
   case TMSG_HIBERNATE:
-    g_powerManager.Hibernate();
+    SetExitCode(EXITCODE_GAMES);
+    Stop(EXITCODE_GAMES);
     break;
 
   case TMSG_SUSPEND:
@@ -2925,10 +2941,45 @@ void CApplication::Stop(int exitCode)
 {
   try
   {
+    // stop TV backend
+    std::ifstream isRunVDR, isRunTVH;
+    isRunVDR.open("/storage/.cache/services/vdr-backend.conf");
+    isRunTVH.open("/storage/.cache/services/tvheadend.conf");
+
+    if(isRunVDR.good())
+      system("systemctl stop vdr-backend.service");
+    if(isRunTVH.good())
+      system("systemctl stop tvheadend.service");
+    isRunVDR.close();
+    isRunTVH.close();
+
     CVariant vExitCode(CVariant::VariantTypeObject);
     vExitCode["exitcode"] = m_ExitCode;
     CAnnouncementManager::GetInstance().Announce(System, "xbmc", "OnQuit", vExitCode);
 
+    if (m_ExitCode == EXITCODE_QUIT) // start VDR
+    {
+      std::ifstream isStartVDR;
+      isStartVDR.open("/storage/.cache/services/vdr.conf");
+
+      if(isStartVDR.good())
+      {
+        remove("/var/lock/start.kodi");
+        system("systemctl stop boblightd.service");
+        system("touch /var/lock/start.vdr");
+        system("systemctl start vdr.service");
+      }
+      isStartVDR.close();
+    }
+    else if (m_ExitCode == EXITCODE_GAMES) // start RetroArch
+    {
+        remove("/var/lock/start.kodi");
+        system("systemctl stop boblightd.service");
+        system("modprobe snd_bcm2835");
+        system("touch /var/lock/start.games");
+        system("systemctl start emustation.service");
+    }
+
     // Abort any active screensaver
     WakeUpScreenSaverAndDPMS();
 
diff -Naurp kodi-16.1-rc2-a6d8b94/xbmc/powermanagement/linux/RaspberryPIPowerSyscall.h kodi-16.1-rc2-a6d8b94-patch/xbmc/powermanagement/linux/RaspberryPIPowerSyscall.h
--- kodi-16.1-rc2-a6d8b94/xbmc/powermanagement/linux/RaspberryPIPowerSyscall.h	2016-03-13 17:37:33.000000000 +0200
+++ kodi-16.1-rc2-a6d8b94-patch/xbmc/powermanagement/linux/RaspberryPIPowerSyscall.h	2016-03-13 17:35:57.000000000 +0200
@@ -36,7 +36,7 @@ public:
   virtual bool Reboot();
 
   virtual bool CanPowerdown() { return true; }
-  virtual bool CanHibernate() { return false; }
+  virtual bool CanHibernate() { return true; }
   virtual bool CanReboot()    { return true; }
 
   virtual int  BatteryLevel() { return 0; }
diff -Naurp kodi-16.1-rc2-a6d8b94/xbmc/powermanagement/PowerManager.cpp kodi-16.1-rc2-a6d8b94-patch/xbmc/powermanagement/PowerManager.cpp
--- kodi-16.1-rc2-a6d8b94/xbmc/powermanagement/PowerManager.cpp	2016-03-13 17:37:33.000000000 +0200
+++ kodi-16.1-rc2-a6d8b94-patch/xbmc/powermanagement/PowerManager.cpp	2016-03-13 17:35:57.000000000 +0200
@@ -325,11 +325,5 @@ void CPowerManager::SettingOptionsShutdo
     list.push_back(make_pair(g_localizeStrings.Get(13010), POWERSTATE_HIBERNATE));
   if (g_powerManager.CanSuspend())
     list.push_back(make_pair(g_localizeStrings.Get(13011), POWERSTATE_SUSPEND));
-  if (!g_application.IsStandAlone())
-  {
-    list.push_back(make_pair(g_localizeStrings.Get(13009), POWERSTATE_QUIT));
-#if !defined(TARGET_DARWIN_IOS)
-    list.push_back(make_pair(g_localizeStrings.Get(13014), POWERSTATE_MINIMIZE));
-#endif
-  }
+  list.push_back(make_pair(g_localizeStrings.Get(13012), POWERSTATE_QUIT));
 }
diff -Naurp kodi-16.1-rc2-a6d8b94/xbmc/XBApplicationEx.h kodi-16.1-rc2-a6d8b94-patch/xbmc/XBApplicationEx.h
--- kodi-16.1-rc2-a6d8b94/xbmc/XBApplicationEx.h	2016-03-13 17:37:33.000000000 +0200
+++ kodi-16.1-rc2-a6d8b94-patch/xbmc/XBApplicationEx.h	2016-03-13 17:35:57.000000000 +0200
@@ -29,6 +29,7 @@ enum {
   EXITCODE_POWERDOWN = 64,
   EXITCODE_RESTARTAPP= 65,
   EXITCODE_REBOOT    = 66,
+  EXITCODE_GAMES     = 67,
 };
 
 class CXBApplicationEx : public IWindowManagerCallback
